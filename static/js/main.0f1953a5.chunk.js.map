{"version":3,"sources":["images sync nonrecursive //.(png)$","images/angel.png","images/bauble.png","images/bell.png","images/bonfire.png","images/boot.png","images/boy.png","images/breakfast.png","images/cabin.png","images/candies.png","images/candle.png","images/candycane.png","images/chimney.png","images/christmascard.png","images/christmascard1.png","images/christmassock.png","images/christmastree.png","images/christmaswreath.png","images/deer.png","images/drum.png","images/earmuffs.png","images/elf.png","images/fireplace.png","images/gift.png","images/giftbag.png","images/gingerbreadman.png","images/girl.png","images/hotchocolate.png","images/jinglebell.png","images/light.png","images/mistletoe.png","images/mitten.png","images/muffin.png","images/pie.png","images/pinecone.png","images/poinsettia.png","images/ribbon.png","images/santaclaus.png","images/scarf.png","images/shooting-star.png","images/sled.png","images/snowflake.png","images/snowglobe.png","images/snowman.png","images/star.png","images/sweater.png","images/tophat.png","images/train.png","images/turkey.png","images/wine.png","images/winterhat.png","components/Grid/index.js","components/Image/index.js","components/Button/index.js","App.js","serviceWorker.js","index.js"],"names":["map","./angel.png","./bauble.png","./bell.png","./bonfire.png","./boot.png","./boy.png","./breakfast.png","./cabin.png","./candies.png","./candle.png","./candycane.png","./chimney.png","./christmascard.png","./christmascard1.png","./christmassock.png","./christmastree.png","./christmaswreath.png","./deer.png","./drum.png","./earmuffs.png","./elf.png","./fireplace.png","./gift.png","./giftbag.png","./gingerbreadman.png","./girl.png","./hotchocolate.png","./jinglebell.png","./light.png","./mistletoe.png","./mitten.png","./muffin.png","./pie.png","./pinecone.png","./poinsettia.png","./ribbon.png","./santaclaus.png","./scarf.png","./shooting-star.png","./sled.png","./snowflake.png","./snowglobe.png","./snowman.png","./star.png","./sweater.png","./tophat.png","./train.png","./turkey.png","./wine.png","./winterhat.png","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","p","Container","_ref","fluid","name","children","react_default","a","createElement","className","concat","Row","_ref2","Col","_ref3","size","names","split","join","Image","url","onClick","alt","replace","src","Button","text","type","imagesObj","r","links","item","key","importAll","require","App","state","level","buttons","won","score","images","generateImageGroup","gameLevel","allImages","imageGroup","indexList","i","imageIndex","Math","floor","random","includes","push","j","length","imageObj","link","wasclicked","handleLevelClick","levelImages","_this","setState","handleImageClick","imageIsRepeat","newImages","sort","_this2","this","height","button","href","title","target","rel","image","index","columnWidth","toString","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gLAAA,IAAAA,EAAA,CACAC,cAAA,GACAC,eAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,aAAA,GACAC,YAAA,GACAC,kBAAA,GACAC,cAAA,GACAC,gBAAA,GACAC,eAAA,GACAC,kBAAA,GACAC,gBAAA,GACAC,sBAAA,GACAC,uBAAA,GACAC,sBAAA,GACAC,sBAAA,GACAC,wBAAA,GACAC,aAAA,GACAC,aAAA,GACAC,iBAAA,GACAC,YAAA,GACAC,kBAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,uBAAA,GACAC,aAAA,GACAC,qBAAA,GACAC,mBAAA,GACAC,cAAA,GACAC,kBAAA,GACAC,eAAA,GACAC,eAAA,GACAC,YAAA,GACAC,iBAAA,GACAC,mBAAA,GACAC,eAAA,GACAC,mBAAA,GACAC,cAAA,GACAC,sBAAA,GACAC,aAAA,GACAC,kBAAA,GACAC,kBAAA,GACAC,gBAAA,GACAC,aAAA,GACAC,gBAAA,GACAC,eAAA,GACAC,cAAA,GACAC,eAAA,GACAC,aAAA,GACAC,kBAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAAG,EAAAF,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAArD,EAAAoD,GACA,KAAAC,EAAA,IACA,IAAAG,EAAA,IAAAC,MAAA,uBAAAL,EAAA,KAEA,MADAI,EAAAE,KAAA,mBACAF,EAEA,OAAAH,EAEAF,EAAAQ,KAAA,WACA,OAAAC,OAAAD,KAAA3D,IAEAmD,EAAAU,QAAAP,EACAQ,EAAAC,QAAAZ,EACAA,EAAAE,GAAA,oBCxEAS,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,6DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,sDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,4DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,0DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,iDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,sDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,oDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,wDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,mDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,2DCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,uDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,kDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,qDCAxCF,EAAAC,QAAiBR,EAAAS,EAAuB,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","file":"static/js/main.0f1953a5.chunk.js","sourcesContent":["var map = {\n\t\"./angel.png\": 21,\n\t\"./bauble.png\": 22,\n\t\"./bell.png\": 23,\n\t\"./bonfire.png\": 24,\n\t\"./boot.png\": 25,\n\t\"./boy.png\": 26,\n\t\"./breakfast.png\": 27,\n\t\"./cabin.png\": 28,\n\t\"./candies.png\": 29,\n\t\"./candle.png\": 30,\n\t\"./candycane.png\": 31,\n\t\"./chimney.png\": 32,\n\t\"./christmascard.png\": 33,\n\t\"./christmascard1.png\": 34,\n\t\"./christmassock.png\": 35,\n\t\"./christmastree.png\": 36,\n\t\"./christmaswreath.png\": 37,\n\t\"./deer.png\": 38,\n\t\"./drum.png\": 39,\n\t\"./earmuffs.png\": 40,\n\t\"./elf.png\": 41,\n\t\"./fireplace.png\": 42,\n\t\"./gift.png\": 43,\n\t\"./giftbag.png\": 44,\n\t\"./gingerbreadman.png\": 45,\n\t\"./girl.png\": 46,\n\t\"./hotchocolate.png\": 47,\n\t\"./jinglebell.png\": 48,\n\t\"./light.png\": 49,\n\t\"./mistletoe.png\": 50,\n\t\"./mitten.png\": 51,\n\t\"./muffin.png\": 52,\n\t\"./pie.png\": 53,\n\t\"./pinecone.png\": 54,\n\t\"./poinsettia.png\": 55,\n\t\"./ribbon.png\": 56,\n\t\"./santaclaus.png\": 57,\n\t\"./scarf.png\": 58,\n\t\"./shooting-star.png\": 59,\n\t\"./sled.png\": 60,\n\t\"./snowflake.png\": 61,\n\t\"./snowglobe.png\": 62,\n\t\"./snowman.png\": 63,\n\t\"./star.png\": 64,\n\t\"./sweater.png\": 65,\n\t\"./tophat.png\": 66,\n\t\"./train.png\": 67,\n\t\"./turkey.png\": 68,\n\t\"./wine.png\": 69,\n\t\"./winterhat.png\": 70\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/angel.0554ddd3.png\";","module.exports = __webpack_public_path__ + \"static/media/bauble.cfa7290a.png\";","module.exports = __webpack_public_path__ + \"static/media/bell.40c6efd1.png\";","module.exports = __webpack_public_path__ + \"static/media/bonfire.e58e7797.png\";","module.exports = __webpack_public_path__ + \"static/media/boot.fc6e735a.png\";","module.exports = __webpack_public_path__ + \"static/media/boy.ae3a4ea4.png\";","module.exports = __webpack_public_path__ + \"static/media/breakfast.57b68aa1.png\";","module.exports = __webpack_public_path__ + \"static/media/cabin.f64710d5.png\";","module.exports = __webpack_public_path__ + \"static/media/candies.3413b9c9.png\";","module.exports = __webpack_public_path__ + \"static/media/candle.abc95bb2.png\";","module.exports = __webpack_public_path__ + \"static/media/candycane.55fac5a7.png\";","module.exports = __webpack_public_path__ + \"static/media/chimney.2cb83ad9.png\";","module.exports = __webpack_public_path__ + \"static/media/christmascard.72e2502b.png\";","module.exports = __webpack_public_path__ + \"static/media/christmascard1.4fe78510.png\";","module.exports = __webpack_public_path__ + \"static/media/christmassock.bd74ea5e.png\";","module.exports = __webpack_public_path__ + \"static/media/christmastree.3c00e8e7.png\";","module.exports = __webpack_public_path__ + \"static/media/christmaswreath.296be916.png\";","module.exports = __webpack_public_path__ + \"static/media/deer.977711ea.png\";","module.exports = __webpack_public_path__ + \"static/media/drum.84b6ce24.png\";","module.exports = __webpack_public_path__ + \"static/media/earmuffs.7a2e8287.png\";","module.exports = __webpack_public_path__ + \"static/media/elf.583e27b6.png\";","module.exports = __webpack_public_path__ + \"static/media/fireplace.e79bc04c.png\";","module.exports = __webpack_public_path__ + \"static/media/gift.d120644c.png\";","module.exports = __webpack_public_path__ + \"static/media/giftbag.b077c2d5.png\";","module.exports = __webpack_public_path__ + \"static/media/gingerbreadman.3652e838.png\";","module.exports = __webpack_public_path__ + \"static/media/girl.666e4f34.png\";","module.exports = __webpack_public_path__ + \"static/media/hotchocolate.7ec61eb1.png\";","module.exports = __webpack_public_path__ + \"static/media/jinglebell.2fbbae87.png\";","module.exports = __webpack_public_path__ + \"static/media/light.a83dedf6.png\";","module.exports = __webpack_public_path__ + \"static/media/mistletoe.68a2a4a5.png\";","module.exports = __webpack_public_path__ + \"static/media/mitten.01de8a7c.png\";","module.exports = __webpack_public_path__ + \"static/media/muffin.4f45a144.png\";","module.exports = __webpack_public_path__ + \"static/media/pie.48a27818.png\";","module.exports = __webpack_public_path__ + \"static/media/pinecone.82a63f3a.png\";","module.exports = __webpack_public_path__ + \"static/media/poinsettia.a9ad5eb0.png\";","module.exports = __webpack_public_path__ + \"static/media/ribbon.a2469909.png\";","module.exports = __webpack_public_path__ + \"static/media/santaclaus.432085ea.png\";","module.exports = __webpack_public_path__ + \"static/media/scarf.339bdc2b.png\";","module.exports = __webpack_public_path__ + \"static/media/shooting-star.58d7156f.png\";","module.exports = __webpack_public_path__ + \"static/media/sled.843ec2ae.png\";","module.exports = __webpack_public_path__ + \"static/media/snowflake.4410d722.png\";","module.exports = __webpack_public_path__ + \"static/media/snowglobe.42bf43d9.png\";","module.exports = __webpack_public_path__ + \"static/media/snowman.d68a9869.png\";","module.exports = __webpack_public_path__ + \"static/media/star.0618d16a.png\";","module.exports = __webpack_public_path__ + \"static/media/sweater.cc613e44.png\";","module.exports = __webpack_public_path__ + \"static/media/tophat.b03bac62.png\";","module.exports = __webpack_public_path__ + \"static/media/train.1d140fc1.png\";","module.exports = __webpack_public_path__ + \"static/media/turkey.181ba01b.png\";","module.exports = __webpack_public_path__ + \"static/media/wine.47f5a4d4.png\";","module.exports = __webpack_public_path__ + \"static/media/winterhat.b06d8a18.png\";","import React from \"react\";\n\n// Exporting the Container, Row, and Col components from this file\n\n// This Container component allows us to use a bootstrap container without worrying about class names\nexport function Container({ fluid, name, children }) {\n  return <div className={`container${fluid ? \"-fluid\" : \"\"} ${name}`}>{children}</div>;\n}\n\n// This Row component lets us use a bootstrap row without having to think about class names\nexport function Row({ fluid, children }) {\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\n}\n\n// This Col component lets us size bootstrap columns with less syntax\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\nexport function Col({ size, children }) {\n    const names = size.split(\" \").map(size => \"col-\" + size).join(\" \");\n  return (\n    <div\n      className={names}\n    >\n      {children}\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./style.css\";\n\n// Image cards to click on\n\nexport default function Image({ name, url, onClick }) {\n  return <img className=\"bg-green my-2 p-2\" alt={name.replace(\".png\", \"\")} src={url} onClick={onClick}/>;\n}","import React from \"react\";\n\n// Buttons\n\nexport default function Button({ text, onClick }) {\n  return <button className=\"btn btn-light btn-lg text-green px-md-3 my-2 mx-2 mx-md-2\" type=\"button\" onClick={onClick}>{text}</button>;\n}\n","// import React, components, CSS\nimport React, { Component } from 'react';\nimport { Col, Row, Container } from \"./components/Grid\";\nimport Image from \"./components/Image\";\nimport Button from \"./components/Button\";\nimport './App.css';\n\n// get all images and format them into objects\nfunction importAll(r) {\n    let links = {};\n    let allkeys = r.keys().map((item) => {\n        // get rid of some extra in names\n        let key = item.replace('./', '');\n        links[key] = r(item);\n        return key;\n    });\n    let allImagesObj = { keys: allkeys, links: links };\n    return allImagesObj;\n}\n\n// call function to import images\nconst imagesObj = importAll(require.context('./images', false, /\\.(png)$/));\n\n// main content for this file:\nclass App extends Component {\n    state = {\n        // difficulty level\n        level: 12,\n        // buttons to change difficulty\n        buttons: [12, 16, 24, 36],\n        // whether player has won yet\n        won: false,\n        // score: images clicked w/o repeat\n        score: 0,\n        // images for this round\n        images: []\n    };\n\n    // method to generate images, called on level change\n    generateImageGroup = (gameLevel, allImages) => {\n        // array to return, will be filled with image objects\n        let imageGroup = [];\n        // determine random, no doubles\n        let indexList = [];\n        // loop to choose random selection\n        for (let i = 0; i < gameLevel; i++) {\n            let imageIndex = Math.floor((Math.random() * 50))\n            if (!(indexList.includes(imageIndex))) {\n                indexList.push(imageIndex)\n            }\n            else {\n                i--\n            }\n        }\n    \n        // loop to build objects based on selection above\n        for (let j = 0; j < indexList.length; j++ ) { \n            let name = allImages.keys[indexList[j]];\n            let imageObj = {\n                name: name,\n                link: allImages.links[name],\n                wasclicked: false\n            }\n            imageGroup.push(imageObj);\n        };\n        indexList.length = 0\n        return imageGroup;\n    }\n\n    // method to reset game on level click\n    handleLevelClick = id => {\n        let levelImages = this.generateImageGroup(id, imagesObj);\n        this.setState({\n            level: id,\n            images: levelImages,\n            won: false,\n            score: 0\n        })\n    }\n\n    // method to handle click on image\n    handleImageClick = id => {\n        // set based on whether the image was previously clicked\n        const imageIsRepeat = this.state.images[id].wasclicked;\n        // if user got through all pictures with no repeats, user wins\n        if ((this.state.score === this.state.level - 1) && !imageIsRepeat) {\n            this.setState((state) => { \n                return { \n                    won: true, \n                    score: state.score + 1\n                } \n            });\n        }\n        // if user didn't win on this click\n        else {\n            // if the image is repeated, reset\n            if (imageIsRepeat) {\n                let levelImages = this.generateImageGroup(this.state.level, imagesObj);\n                this.setState({\n                    images: levelImages,\n                    won: false,\n                    score: 0\n                })\n            }\n            // if the user hasn't won yet, and the image is not a repeat\n            else {\n                this.setState((state) => {\n                    // set \"wasclicked\" on the image \n                    // in the frozen state fed into this method\n                    state.images[id].wasclicked = true\n                    // shuffle the images in the frozen state\n                    let newImages = state.images.sort( () => Math.random() - 0.5);\n                    // feed the shuffled images back into the live state,\n                    // and up the score by 1\n                    return {\n                        score: state.score + 1,\n                        images: newImages\n                    }\n                });\n            }\n        }\n    }\n\n    render() {\n        return (\n            // everything that shows on the page\n            <div className=\"App text-white\">\n                {/* contains everything */}\n                <Row height=\"auto md-100\">\n                    {/* contains the nav sidebar */}\n                    <Col size=\"12 md-2\" height=\"auto md-100\">\n                        <nav className=\"nav flex-row flex-md-column px-2 py-md-5 bg-green h-auto h-md-100\">\n                            <div className=\"d-flex flex-row flex-wrap mx-auto\">\n                                {/* create all the level buttons */}\n                                {this.state.buttons.map(button => (\n                                    <Button\n                                        onClick={() => this.handleLevelClick(button)}\n                                        key={button}\n                                        text={button}\n                                    />\n                                ))}\n                            </div>\n                            <br />\n                            <h4>Score: {this.state.score}</h4>\n                            <br />\n                            <br />\n                            <p>Choose your difficulty above, then click on each image to play. Can you get through them all without repeating yourself?</p>\n                            <br />\n                            <br />\n                            <br />\n                            <br />\n                            <br />\n                            <p>Icons made by <a href=\"http://www.freepik.com/\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">Flaticon</a>, licensed by <a href=\"http://creativecommons.org/licenses/by/3.0/\" title=\"Creative Commons BY 3.0\" target=\"_blank\" rel=\"noopener noreferrer\">CC 3.0 BY</a></p>\n                        </nav>\n                    </Col>\n                    {/* contains non-navbar area */}\n                    <Col size=\"12 md-10\">\n                        <Container name=\"mt-3 mr-md-5 px-5 mw-100\">\n                            {/* display images, when they exist and user hasn't won */}\n                            {/* if user won, display winning message */}\n                            {((this.state.images && !this.state.won) && \n                            <Row> \n                                {this.state.images.map((image, index) => {\n                                    let columnWidth = (this.state.level < 17 ? 3 : 2).toString();\n                                    let columnAndImage = <Col key={index} size={`3 md-${columnWidth}`}>\n                                        <Image \n                                            key={image.name}\n                                            name={image.name}\n                                            url={image.link}\n                                            onClick={() => this.handleImageClick(index)}\n                                            />\n                                    </Col>\n                                    return columnAndImage\n                                })}\n                            </Row>\n                            ) || (this.state.won && \n                                <div className=\"m-auto bg-green rounded border-white\">\n                                    <br/>\n                                    <h1 className=\"text-center py-5 my-5\">You Won!</h1>\n                                    <br/>\n                                </div>)\n                            }\n                        </Container>\n                    </Col>\n                </Row>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}